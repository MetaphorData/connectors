# Generated by ariadne-codegen
# Source: queries.graphql

from typing import List, Optional

from pydantic import Field

from .base_model import BaseModel


class GetEnvironmentSnapshotFilePath(BaseModel):
    environment: "GetEnvironmentSnapshotFilePathEnvironment"


class GetEnvironmentSnapshotFilePathEnvironment(BaseModel):
    definition: Optional["GetEnvironmentSnapshotFilePathEnvironmentDefinition"]


class GetEnvironmentSnapshotFilePathEnvironmentDefinition(BaseModel):
    snapshots: "GetEnvironmentSnapshotFilePathEnvironmentDefinitionSnapshots"


class GetEnvironmentSnapshotFilePathEnvironmentDefinitionSnapshots(BaseModel):
    edges: List["GetEnvironmentSnapshotFilePathEnvironmentDefinitionSnapshotsEdges"]


class GetEnvironmentSnapshotFilePathEnvironmentDefinitionSnapshotsEdges(BaseModel):
    node: "GetEnvironmentSnapshotFilePathEnvironmentDefinitionSnapshotsEdgesNode"


class GetEnvironmentSnapshotFilePathEnvironmentDefinitionSnapshotsEdgesNode(BaseModel):
    file_path: str = Field(alias="filePath")


GetEnvironmentSnapshotFilePath.model_rebuild()
GetEnvironmentSnapshotFilePathEnvironment.model_rebuild()
GetEnvironmentSnapshotFilePathEnvironmentDefinition.model_rebuild()
GetEnvironmentSnapshotFilePathEnvironmentDefinitionSnapshots.model_rebuild()
GetEnvironmentSnapshotFilePathEnvironmentDefinitionSnapshotsEdges.model_rebuild()
