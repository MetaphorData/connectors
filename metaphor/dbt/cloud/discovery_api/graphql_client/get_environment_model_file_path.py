# Generated by ariadne-codegen
# Source: queries.graphql

from typing import List, Optional

from pydantic import Field

from .base_model import BaseModel


class GetEnvironmentModelFilePath(BaseModel):
    environment: "GetEnvironmentModelFilePathEnvironment"


class GetEnvironmentModelFilePathEnvironment(BaseModel):
    definition: Optional["GetEnvironmentModelFilePathEnvironmentDefinition"]


class GetEnvironmentModelFilePathEnvironmentDefinition(BaseModel):
    models: "GetEnvironmentModelFilePathEnvironmentDefinitionModels"


class GetEnvironmentModelFilePathEnvironmentDefinitionModels(BaseModel):
    edges: List["GetEnvironmentModelFilePathEnvironmentDefinitionModelsEdges"]


class GetEnvironmentModelFilePathEnvironmentDefinitionModelsEdges(BaseModel):
    node: "GetEnvironmentModelFilePathEnvironmentDefinitionModelsEdgesNode"


class GetEnvironmentModelFilePathEnvironmentDefinitionModelsEdgesNode(BaseModel):
    file_path: str = Field(alias="filePath")


GetEnvironmentModelFilePath.model_rebuild()
GetEnvironmentModelFilePathEnvironment.model_rebuild()
GetEnvironmentModelFilePathEnvironmentDefinition.model_rebuild()
GetEnvironmentModelFilePathEnvironmentDefinitionModels.model_rebuild()
GetEnvironmentModelFilePathEnvironmentDefinitionModelsEdges.model_rebuild()
