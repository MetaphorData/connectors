# Generated by ariadne-codegen
# Source: queries.graphql

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel


class GetMetrics(BaseModel):
    environment: "GetMetricsEnvironment"


class GetMetricsEnvironment(BaseModel):
    definition: Optional["GetMetricsEnvironmentDefinition"]


class GetMetricsEnvironmentDefinition(BaseModel):
    metrics: "GetMetricsEnvironmentDefinitionMetrics"


class GetMetricsEnvironmentDefinitionMetrics(BaseModel):
    total_count: int = Field(alias="totalCount")
    page_info: "GetMetricsEnvironmentDefinitionMetricsPageInfo" = Field(
        alias="pageInfo"
    )
    edges: List["GetMetricsEnvironmentDefinitionMetricsEdges"]


class GetMetricsEnvironmentDefinitionMetricsPageInfo(BaseModel):
    has_next_page: bool = Field(alias="hasNextPage")
    end_cursor: Optional[str] = Field(alias="endCursor")


class GetMetricsEnvironmentDefinitionMetricsEdges(BaseModel):
    node: "GetMetricsEnvironmentDefinitionMetricsEdgesNode"


class GetMetricsEnvironmentDefinitionMetricsEdgesNode(BaseModel):
    fqn: List[str]
    name: Optional[str]
    type: Optional[str]
    filter: Optional[Any]
    formula: Optional[str]
    type_params: Optional[Any] = Field(alias="typeParams")
    unique_id: str = Field(alias="uniqueId")
    tags: List[str]
    description: Optional[str]
    meta: Optional[Any]
    package_name: Optional[str] = Field(alias="packageName")


GetMetrics.model_rebuild()
GetMetricsEnvironment.model_rebuild()
GetMetricsEnvironmentDefinition.model_rebuild()
GetMetricsEnvironmentDefinitionMetrics.model_rebuild()
GetMetricsEnvironmentDefinitionMetricsEdges.model_rebuild()
