# Generated by ariadne-codegen
# Source: queries.graphql

from typing import List, Optional

from pydantic import Field

from .base_model import BaseModel


class GetJobRunSources(BaseModel):
    job: Optional["GetJobRunSourcesJob"]


class GetJobRunSourcesJob(BaseModel):
    sources: List["GetJobRunSourcesJobSources"]


class GetJobRunSourcesJobSources(BaseModel):
    columns: Optional[List["GetJobRunSourcesJobSourcesColumns"]]
    database: Optional[str]
    description: Optional[str]
    identifier: Optional[str]
    schema_: Optional[str] = Field(alias="schema")
    unique_id: str = Field(alias="uniqueId")


class GetJobRunSourcesJobSourcesColumns(BaseModel):
    description: Optional[str]
    name: Optional[str]


GetJobRunSources.model_rebuild()
GetJobRunSourcesJob.model_rebuild()
GetJobRunSourcesJobSources.model_rebuild()
