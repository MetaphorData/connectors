# Generated by ariadne-codegen
# Source: queries.graphql

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel


class GetJobRunModels(BaseModel):
    job: Optional["GetJobRunModelsJob"]


class GetJobRunModelsJob(BaseModel):
    models: List["GetJobRunModelsJobModels"]


class GetJobRunModelsJobModels(BaseModel):
    alias: Optional[str]
    columns: Optional[List["GetJobRunModelsJobModelsColumns"]]
    compiled_code: Optional[str] = Field(alias="compiledCode")
    compiled_sql: Optional[str] = Field(alias="compiledSql")
    database: Optional[str]
    depends_on: List[str] = Field(alias="dependsOn")
    description: Optional[str]
    environment_id: Any = Field(alias="environmentId")
    materialized_type: Optional[str] = Field(alias="materializedType")
    meta: Optional[Any]
    name: Optional[str]
    package_name: Optional[str] = Field(alias="packageName")
    raw_code: Optional[str] = Field(alias="rawCode")
    raw_sql: Optional[str] = Field(alias="rawSql")
    run_results: List["GetJobRunModelsJobModelsRunResults"] = Field(alias="runResults")
    schema_: Optional[str] = Field(alias="schema")
    tags: Optional[List[str]]
    unique_id: str = Field(alias="uniqueId")


class GetJobRunModelsJobModelsColumns(BaseModel):
    comment: Optional[str]
    description: Optional[str]
    meta: Optional[Any]
    name: Optional[str]
    tags: List[str]
    type: Optional[str]


class GetJobRunModelsJobModelsRunResults(BaseModel):
    status: Optional[str]
    execute_completed_at: Optional[Any] = Field(alias="executeCompletedAt")


GetJobRunModels.model_rebuild()
GetJobRunModelsJob.model_rebuild()
GetJobRunModelsJobModels.model_rebuild()
