# Generated by ariadne-codegen
# Source: queries.graphql

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel


class GetJobRunTests(BaseModel):
    job: Optional["GetJobRunTestsJob"]


class GetJobRunTestsJob(BaseModel):
    tests: List["GetJobRunTestsJobTests"]


class GetJobRunTestsJobTests(BaseModel):
    column_name: Optional[str] = Field(alias="columnName")
    compiled_sql: Optional[str] = Field(alias="compiledSql")
    compiled_code: Optional[str] = Field(alias="compiledCode")
    depends_on: List[str] = Field(alias="dependsOn")
    name: Optional[str]
    unique_id: str = Field(alias="uniqueId")
    status: Optional[str]
    execute_completed_at: Optional[Any] = Field(alias="executeCompletedAt")


GetJobRunTests.model_rebuild()
GetJobRunTestsJob.model_rebuild()
