---
# Welcome to Great Expectations! Always know what to expect from your data.
#
# Here you can define datasources, batch kwargs generators, integrations and
# more. This file is intended to be committed to your repo. For help with
# configuration please:
#   - Read our docs: https://docs.greatexpectations.io/docs/guides/connecting_to_your_data/connect_to_data_overview/#2-configure-your-datasource
#   - Join our slack channel: http://greatexpectations.io/slack

# config_version refers to the syntactic version of this config file, and is used in maintaining backwards compatibility
# It is auto-generated and usually does not need to be changed.
config_version: 4.0

# This config file supports variable substitution which enables: 1) keeping
# secrets out of source control & 2) environment-based configuration changes
# such as staging vs prod.
#
# When GX encounters substitution syntax (like `my_key: ${my_value}` or
# `my_key: $my_value`) in the great_expectations.yml file, it will attempt
# to replace the value of `my_key` with the value from an environment
# variable `my_value` or a corresponding key read from this config file,
# which is defined through the `config_variables_file_path`.
# Environment variables take precedence over variables defined here.
#
# Substitution values defined here can be a simple (non-nested) value,
# nested value such as a dictionary, or an environment variable (i.e. ${ENV_VAR})
#
#
# https://docs.greatexpectations.io/docs/guides/setup/configuring_data_contexts/how_to_configure_credentials


config_variables_file_path: uncommitted/config_variables.yml

# The plugins_directory will be added to your python path for custom modules
# used to override and extend Great Expectations.
plugins_directory: plugins/

stores:
# Stores are configurable places to store things like Expectations, Validations
# Data Docs, and more. These are for advanced users only - most users can simply
# leave this section alone.
  expectations_store:
    class_name: ExpectationsStore
    store_backend:
      class_name: TupleFilesystemStoreBackend
      base_directory: expectations/

  validation_results_store:
    class_name: ValidationResultsStore
    store_backend:
      class_name: TupleFilesystemStoreBackend
      base_directory: uncommitted/validations/

  checkpoint_store:
    class_name: CheckpointStore
    store_backend:
      class_name: TupleFilesystemStoreBackend
      suppress_store_backend_id: true
      base_directory: checkpoints/

  validation_definition_store:
    class_name: ValidationDefinitionStore
    store_backend:
      class_name: TupleFilesystemStoreBackend
      base_directory: validation_definitions/

expectations_store_name: expectations_store
validation_results_store_name: validation_results_store
checkpoint_store_name: checkpoint_store

data_docs_sites:
  # Data Docs make it simple to visualize data quality in your project. These
  # include Expectations, Validations & Profiles. The are built for all
  # Datasources from JSON artifacts in the local repo including validations &
  # profiles from the uncommitted directory. Read more at https://docs.greatexpectations.io/docs/terms/data_docs
  local_site:
    class_name: SiteBuilder
    show_how_to_buttons: true
    store_backend:
      class_name: TupleFilesystemStoreBackend
      base_directory: uncommitted/data_docs/local_site/
    site_index_builder:
      class_name: DefaultSiteIndexBuilder
fluent_datasources:
  ACME_BERLIN_BICYCLES_CYCLE_HIRE-source:
    type: snowflake
    id: 2f159b03-e9ce-40c1-9071-a401313fd44e
    assets:
      asset:
        type: table
        id: 6707410d-6310-431e-a242-e263a661b736
        batch_metadata: {}
        batch_definitions:
          batch_definition:
            id: 4f8eb8d7-5d26-42f0-b222-b3e4afd47673
            partitioner:
        table_name: CYCLE_HIRE
        schema_name: berlin_bicycles
    connection_string: snowflake://user:pw@account-dev/ACME/BERLIN_BICYCLES?warehouse=wh&role=role&application=great_expectations_oss
      # XXX DO NOT MODIFY ME!!! XXX
  ACME_BERLIN_BICYCLES_CYCLE_STATIONS-source:
    type: snowflake
    id: 4e6d966e-b902-4000-9fae-0f66652cc217
    assets:
      asset:
        type: table
        id: f5141f9a-e88c-4fc4-b704-cc9dd3959506
        batch_metadata: {}
        batch_definitions:
          batch_definition:
            id: 7de29d45-3921-44f4-9bcf-9806ac350f6f
            partitioner:
        table_name: CYCLE_STATIONS
        schema_name: berlin_bicycles
    connection_string: snowflake://user:pw@account-dev/ACME/BERLIN_BICYCLES?warehouse=wh&role=role&application=great_expectations_oss
      # XXX DO NOT MODIFY ME!!! XXX
  ACME_RIDE_SHARE_CLEANED_BIKE_RIDES-source:
    type: snowflake
    id: c524109a-3ec4-4bc0-a5dd-c7055da58ce7
    assets:
      asset:
        type: table
        id: 5b53f93d-ac9a-477a-a64b-6446985de835
        batch_metadata: {}
        batch_definitions:
          batch_definition:
            id: 26e82f9c-6275-4154-a608-5241202ef61b
            partitioner:
        table_name: CLEANED_BIKE_RIDES
        schema_name: ride_share
    connection_string: snowflake://user:pw@account-dev/ACME/RIDE_SHARE?warehouse=wh&role=role&application=great_expectations_oss
      # XXX DO NOT MODIFY ME!!! XXX
analytics_enabled:
data_context_id: c5e242fb-c1b8-4e8c-a46c-c7190edcd536
