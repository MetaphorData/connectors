[
  {
    "dataset": {
      "documentation": {
        "datasetDocumentations": [],
        "fieldDocumentations": []
      },
      "logicalId": {
        "account": "metaphor",
        "name": "demo_db.dbt_dev.sales_records",
        "platform": "SNOWFLAKE"
      }
    },
    "eventHeader": {
      "time": "2000-01-01T00:00:00+00:00"
    }
  },
  {
    "dataset": {
      "documentation": {
        "datasetDocumentations": [],
        "fieldDocumentations": []
      },
      "logicalId": {
        "account": "metaphor",
        "name": "demo_db.dbt_dev.netflix",
        "platform": "SNOWFLAKE"
      }
    },
    "eventHeader": {
      "time": "2000-01-01T00:00:00+00:00"
    }
  },
  {
    "eventHeader": {
      "time": "2000-01-01T00:00:00+00:00"
    },
    "virtualView": {
      "dbtModel": {
        "compiledSql": "/*\n    Welcome to your first dbt model!\n    Did you know that you can also configure models directly within SQL files?\n    This will override configurations stated in dbt_project.yml\n\n    Try changing \"table\" to \"view\" below\n*/\n\nwith source_data as (\n\n    select 1 as id\n    union all\n    select null as id\n\n)\n\nselect *\nfrom source_data\n\n/*\n    Uncomment the line below to remove records with null `id` values\n*/\n\n-- where id is not null",
        "description": "A starter dbt model",
        "docsUrl": "http://localhost:8080/#!/model/model.trial.my_first_dbt_model",
        "fields": [
          {
            "description": "The primary key for this table",
            "fieldPath": "id",
            "nativeType": "Not Set"
          }
        ],
        "materialization": {
          "targetDataset": "DATASET~AF64AB4122CD383EA8360D20965ABB67",
          "type": "OTHER"
        },
        "packageName": "trial",
        "rawSql": "/*\n    Welcome to your first dbt model!\n    Did you know that you can also configure models directly within SQL files?\n    This will override configurations stated in dbt_project.yml\n\n    Try changing \"table\" to \"view\" below\n*/\n\nwith source_data as (\n\n    select 1 as id\n    union all\n    select null as id\n\n)\n\nselect *\nfrom source_data\n\n/*\n    Uncomment the line below to remove records with null `id` values\n*/\n\n-- where id is not null",
        "tags": [],
        "tests": [
          {
            "columns": [
              "id"
            ],
            "dependsOnMacros": [
              "macro.dbt.test_unique"
            ],
            "name": "unique_my_first_dbt_model_id",
            "sql": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_DEV.my_first_dbt_model\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n",
            "uniqueId": "test.trial.unique_my_first_dbt_model_id.5ef3c774bb"
          },
          {
            "columns": [
              "id"
            ],
            "dependsOnMacros": [
              "macro.dbt.test_not_null"
            ],
            "name": "not_null_my_first_dbt_model_id",
            "sql": "\n    \n    \n\nselect *\nfrom DEMO_DB.DBT_DEV.my_first_dbt_model\nwhere id is null\n\n\n",
            "uniqueId": "test.trial.not_null_my_first_dbt_model_id.f479667b44"
          }
        ],
        "url": "https://github.com/MetaphorData/dbt/tree/main/trial/models/example/my_first_dbt_model.sql"
      },
      "logicalId": {
        "name": "trial.my_first_dbt_model",
        "type": "DBT_MODEL"
      }
    }
  },
  {
    "eventHeader": {
      "time": "2000-01-01T00:00:00+00:00"
    },
    "virtualView": {
      "dbtModel": {
        "compiledSql": "-- Use the `ref` function to select from other models\n\nselect *\nfrom DEMO_DB.DBT_DEV.my_first_dbt_model\nwhere id = 1",
        "description": "A starter dbt model",
        "docsUrl": "http://localhost:8080/#!/model/model.trial.my_second_dbt_model",
        "fields": [
          {
            "description": "The primary key for this table",
            "fieldPath": "id",
            "nativeType": "Not Set"
          }
        ],
        "materialization": {
          "targetDataset": "DATASET~C2E3AFBF33CD1595EE25A57D02B4F04A",
          "type": "VIEW"
        },
        "packageName": "trial",
        "rawSql": "-- Use the `ref` function to select from other models\n\nselect *\nfrom {{ ref('my_first_dbt_model') }}\nwhere id = 1",
        "sourceDatasets": [],
        "sourceModels": [
          "VIRTUAL_VIEW~6792928812BBC200D2459741CFE02D9D"
        ],
        "tags": [],
        "tests": [
          {
            "columns": [
              "id"
            ],
            "dependsOnMacros": [
              "macro.dbt.test_unique"
            ],
            "name": "unique_my_second_dbt_model_id",
            "sql": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_DEV.my_second_dbt_model\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n",
            "uniqueId": "test.trial.unique_my_second_dbt_model_id.bc96125570"
          },
          {
            "columns": [
              "id"
            ],
            "dependsOnMacros": [
              "macro.dbt.test_not_null"
            ],
            "name": "not_null_my_second_dbt_model_id",
            "sql": "\n    \n    \n\nselect *\nfrom DEMO_DB.DBT_DEV.my_second_dbt_model\nwhere id is null\n\n\n",
            "uniqueId": "test.trial.not_null_my_second_dbt_model_id.dc1d13aa6d"
          }
        ],
        "url": "https://github.com/MetaphorData/dbt/tree/main/trial/models/example/my_second_dbt_model.sql"
      },
      "logicalId": {
        "name": "trial.my_second_dbt_model",
        "type": "DBT_MODEL"
      }
    }
  },
  {
    "eventHeader": {
      "time": "2000-01-01T00:00:00+00:00"
    },
    "virtualView": {
      "dbtModel": {
        "compiledSql": "\n\nselect show_id, type, title, country, release_year \nfrom DEMO_DB.DBT_DEV.NETFLIX",
        "description": "First trial model",
        "docsUrl": "http://localhost:8080/#!/model/model.trial.trial_model_1",
        "fields": [
          {
            "description": "The show id, primary key for this table",
            "fieldPath": "show_id",
            "nativeType": "Not Set"
          },
          {
            "description": "The type of the show",
            "fieldPath": "type",
            "nativeType": "Not Set"
          },
          {
            "description": "The title of the show",
            "fieldPath": "title",
            "nativeType": "Not Set"
          },
          {
            "description": "The country where the show was originated from",
            "fieldPath": "country",
            "nativeType": "Not Set"
          },
          {
            "description": "The year the show was released",
            "fieldPath": "release_year",
            "nativeType": "Not Set"
          }
        ],
        "materialization": {
          "targetDataset": "DATASET~1712CB731B3A99B418D013CDD380ED96",
          "type": "TABLE"
        },
        "owners": [
          "PERSON~8B6974C32BFCBBF6AB3930E1B7A17846"
        ],
        "packageName": "trial",
        "rawSql": "{{ config(materialized='table') }}\n\nselect show_id, type, title, country, release_year \nfrom {{ source('DBT_DEV', 'NETFLIX') }}",
        "sourceDatasets": [
          "DATASET~BDB320613577550E8EE6BE295054A8A0"
        ],
        "sourceModels": [],
        "tags": [],
        "tests": [
          {
            "columns": [
              "show_id"
            ],
            "dependsOnMacros": [
              "macro.dbt.test_unique"
            ],
            "name": "unique_trial_model_1_show_id",
            "sql": "\n    \n    \n\nselect\n    show_id as unique_field,\n    count(*) as n_records\n\nfrom DEMO_DB.DBT_DEV.trial_model_1\nwhere show_id is not null\ngroup by show_id\nhaving count(*) > 1\n\n\n",
            "uniqueId": "test.trial.unique_trial_model_1_show_id.e5e71dcd5c"
          },
          {
            "columns": [
              "show_id"
            ],
            "dependsOnMacros": [
              "macro.dbt.test_not_null"
            ],
            "name": "not_null_trial_model_1_show_id",
            "sql": "\n    \n    \n\nselect *\nfrom DEMO_DB.DBT_DEV.trial_model_1\nwhere show_id is null\n\n\n",
            "uniqueId": "test.trial.not_null_trial_model_1_show_id.b9cd21f3cc"
          },
          {
            "columns": [
              "type"
            ],
            "dependsOnMacros": [
              "macro.dbt.test_not_null"
            ],
            "name": "not_null_trial_model_1_type",
            "sql": "\n    \n    \n\nselect *\nfrom DEMO_DB.DBT_DEV.trial_model_1\nwhere type is null\n\n\n",
            "uniqueId": "test.trial.not_null_trial_model_1_type.8258650d8f"
          },
          {
            "columns": [
              "title"
            ],
            "dependsOnMacros": [
              "macro.dbt.test_not_null"
            ],
            "name": "not_null_trial_model_1_title",
            "sql": "\n    \n    \n\nselect *\nfrom DEMO_DB.DBT_DEV.trial_model_1\nwhere title is null\n\n\n",
            "uniqueId": "test.trial.not_null_trial_model_1_title.0df06c3bb2"
          }
        ],
        "url": "https://github.com/MetaphorData/dbt/tree/main/trial/models/example/trial_model_1.sql"
      },
      "logicalId": {
        "name": "trial.trial_model_1",
        "type": "DBT_MODEL"
      }
    }
  },
  {
    "eventHeader": {
      "time": "2000-01-01T00:00:00+00:00"
    },
    "virtualView": {
      "dbtModel": {
        "compiledSql": "\n\nselect country, item_type, \n  year(order_date) as year, \n  sum(total_revenue) as revenue, \n  sum(total_profit) as profit\nfrom DEMO_DB.DBT_DEV.SALES_RECORDS\ngroup by country, item_type, year(order_date)\norder by revenue desc",
        "description": "Second trial model",
        "docsUrl": "http://localhost:8080/#!/model/model.trial.trial_model_2",
        "fields": [
          {
            "description": "The country where the sales records are from",
            "fieldPath": "country",
            "nativeType": "Not Set"
          },
          {
            "description": "The type of the item",
            "fieldPath": "item_type",
            "nativeType": "Not Set"
          },
          {
            "description": "The year that the aggregated sales statistics is for",
            "fieldPath": "year",
            "nativeType": "Not Set"
          },
          {
            "description": "The total revenue aggregated over the country + item_type + year",
            "fieldPath": "revenue",
            "nativeType": "Not Set"
          },
          {
            "description": "The total profit aggregated over the country + item_type + year",
            "fieldPath": "profit",
            "nativeType": "Not Set"
          }
        ],
        "materialization": {
          "targetDataset": "DATASET~193E378823E334188F097A104793663C",
          "type": "TABLE"
        },
        "owners": [
          "PERSON~8B6974C32BFCBBF6AB3930E1B7A17846",
          "PERSON~27A91F4A8FCBDF2DE9821E377D845654"
        ],
        "packageName": "trial",
        "rawSql": "{{ config(materialized='table') }}\n\nselect country, item_type, \n  year(order_date) as year, \n  sum(total_revenue) as revenue, \n  sum(total_profit) as profit\nfrom {{ source('DBT_DEV', 'SALES_RECORDS') }}\ngroup by country, item_type, year(order_date)\norder by revenue desc",
        "sourceDatasets": [
          "DATASET~88E2F99BE08491C03619AC3FF0FF07BC"
        ],
        "sourceModels": [],
        "tags": [],
        "tests": [
          {
            "columns": [
              "country"
            ],
            "dependsOnMacros": [
              "macro.dbt.test_not_null"
            ],
            "name": "not_null_trial_model_2_country",
            "sql": "\n    \n    \n\nselect *\nfrom DEMO_DB.DBT_DEV.trial_model_2\nwhere country is null\n\n\n",
            "uniqueId": "test.trial.not_null_trial_model_2_country.38e34b4f06"
          },
          {
            "columns": [
              "item_type"
            ],
            "dependsOnMacros": [
              "macro.dbt.test_not_null"
            ],
            "name": "not_null_trial_model_2_item_type",
            "sql": "\n    \n    \n\nselect *\nfrom DEMO_DB.DBT_DEV.trial_model_2\nwhere item_type is null\n\n\n",
            "uniqueId": "test.trial.not_null_trial_model_2_item_type.41de9591b6"
          },
          {
            "columns": [
              "year"
            ],
            "dependsOnMacros": [
              "macro.dbt.test_not_null"
            ],
            "name": "not_null_trial_model_2_year",
            "sql": "\n    \n    \n\nselect *\nfrom DEMO_DB.DBT_DEV.trial_model_2\nwhere year is null\n\n\n",
            "uniqueId": "test.trial.not_null_trial_model_2_year.97b36e02ab"
          },
          {
            "columns": [
              "revenue"
            ],
            "dependsOnMacros": [
              "macro.dbt.test_not_null"
            ],
            "name": "not_null_trial_model_2_revenue",
            "sql": "\n    \n    \n\nselect *\nfrom DEMO_DB.DBT_DEV.trial_model_2\nwhere revenue is null\n\n\n",
            "uniqueId": "test.trial.not_null_trial_model_2_revenue.78ade8f402"
          },
          {
            "columns": [
              "profit"
            ],
            "dependsOnMacros": [
              "macro.dbt.test_not_null"
            ],
            "name": "not_null_trial_model_2_profit",
            "sql": "\n    \n    \n\nselect *\nfrom DEMO_DB.DBT_DEV.trial_model_2\nwhere profit is null\n\n\n",
            "uniqueId": "test.trial.not_null_trial_model_2_profit.fe4505f957"
          }
        ],
        "url": "https://github.com/MetaphorData/dbt/tree/main/trial/models/example/trial_model_2.sql"
      },
      "logicalId": {
        "name": "trial.trial_model_2",
        "type": "DBT_MODEL"
      }
    }
  }
]