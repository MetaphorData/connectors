[tool.poetry]
name = "metaphor-connectors"
version = "0.13.33"
license = "Apache-2.0"
description = "A collection of Python-based 'connectors' that extract metadata from various sources to ingest into the Metaphor app."
authors = ["Metaphor <dev@metaphor.io>"]
readme = "README.md"
homepage = "https://metaphor.io"
repository = "https://github.com/MetaphorData/connectors"
packages = [
    { include = "metaphor" },
]

[tool.poetry.scripts]
metaphor = 'metaphor.__main__:main'

[tool.poetry.dependencies]
asyncpg = { version = "^0.27.0", optional = true }
aws-assume-role-lib = "^2.10.0"
azure-identity = { version = "^1.14.0", optional = true }
azure-mgmt-datafactory = { version = "^3.1.0", optional = true }
boto3 = "^1.28.57"
botocore = "^1.31.57"
canonicaljson = "^2.0.0"
databricks-sdk = { version = "^0.12.0", optional = true }
GitPython = "^3.1.37"
google-cloud-bigquery = { version = "^3.1.0", optional = true }
google-cloud-logging = { version = "^3.5.0", optional = true }
jsonschema = "^4.18.6"
lkml = { version = "^1.3.1", optional = true }
looker-sdk = { version = "^23.6.0", optional = true }
metaphor-models = "0.27.12"
msal = { version = "^1.20.0", optional = true }
msgraph-beta-sdk = { version = "1.0.0", optional = true }
pycarlo = { version = "^0.8.1", optional = true }
pydantic = { version = "^2.4.2", extras = ["email"]}
pymssql = { version = "^2.2.9", optional = true }
pymysql = { version = "^1.0.2", optional = true }
python = ">=3.8.1,<4.0"
python-dateutil = "^2.8.1"
PyYAML = "^6.0"
requests = "^2.28.1"
setuptools = "^68.0.0"
smart-open = "^6.3.0"
snowflake-connector-python = { version = "~=3.4.0", optional = true }
SQLAlchemy = { version = "^1.4.46", optional = true}
sql-metadata = { version = "^2.8.0", optional = true }
sqllineage = { version = "~=1.3.8", optional = true }
tableauserverclient = { version = "^0.25", optional = true }
thoughtspot_rest_api_v1 = { version = "1.5.3", optional = true }

[tool.poetry.extras]
all = [
  "asyncpg",
  "azure-identity",
  "azure-mgmt-datafactory",
  "databricks-sdk",
  "GitPython",
  "google-cloud-bigquery",
  "google-cloud-logging",
  "lkml",
  "looker-sdk",
  "msal",
  "msgraph-beta-sdk",
  "pycarlo",
  "pymssql",
  "pymysql",
  "pyserde",
  "snowflake-connector-python",
  "SQLAlchemy",
  "sql-metadata",
  "sqllineage",
  "tableauserverclient",
  "thoughtspot-rest-api-v1",
]
bigquery = ["google-cloud-bigquery", "google-cloud-logging", "sql-metadata"]
datafactory = ["azure-identity", "azure-mgmt-datafactory"]
dbt = []
looker = ["GitPython", "lkml", "looker-sdk", "sql-metadata"]
metabase = ["sql-metadata"]
monte_carlo = ["pycarlo"]
mssql = ["pymssql"]
mysql = ["pymysql", "SQLAlchemy"]
postgresql = ["asyncpg"]
power_bi = ["msal", "msgraph-beta-sdk", "sql-metadata"]
redshift = ["asyncpg", "sqllineage"]
snowflake = ["snowflake-connector-python", "sql-metadata"]
synapse = ["pymssql"]
tableau = ["tableauserverclient", "sqllineage"]
throughtspot = ["thoughtspot-rest-api-v1"]
unity_catalog = ["databricks-sdk"]

[tool.poetry.dev-dependencies]
bandit = "^1.7.2"
black = "^23.3.0"
coverage = "^7.1.0"
datamodel-code-generator = { extras = ["http"], version = "^0.22.0" }
flake8 = "^6.0.0"
freezegun = "^1.2.2"
isort = "^5.11.4"
mypy = "^1.5.1"
pytest = "^7.2.1"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.0.0"
types-attrs = "^19.1.0"
types-freezegun = "^1.1.10"
types-python-dateutil = "^2.8.19.12"
types-pytz = "^2023.3.0.0"
types-PyYAML = "^6.0.4"
types-requests = "^2.28.11"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
asyncio_mode = "strict"

[tool.black]
exclude = "^/(metaphor/dbt/generated/.+)"

[tool.isort]
profile = "black"
extend_skip = [
  ".serverless",
  "dbt_manifest.py",
  "dbt_catalog.py"
]

[tool.mypy]
exclude = ["venv"]
ignore_missing_imports = true
plugins = ["pydantic.mypy"]

[tool.bandit]
exclude_dirs = ["venv"]
skips = [
  'B101',
  'B106',
  'B404',
  'B603',
  'B607',
  'B608'
]
